generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model logoimage {
  id        Int    @id @default(autoincrement())
  image_url String @db.VarChar(255)
}

model sliderimages {
  id              Int    @id @default(autoincrement())
  sliderimage_url String @db.VarChar(255)
}

model CardCategory {
  id        Int             @id @default(autoincrement())
  name      String          @db.VarChar(100)  // e.g., "Birthday", "Wedding"
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  templates CardTemplate[]
}

model CardTemplate {
  id           Int          @id @default(autoincrement())
  categoryId   Int
  title        String       @db.VarChar(150)  // e.g., "Elegant Wedding Invite"
  description  String?      @db.Text          // optional: description of style
  imageUrl     String       @db.VarChar(512)  // preview image
  prompt       String       @db.Text          // original prompt used
  aspectRatio  String       @default("16:9")  // e.g., "1:1", "9:16"
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  category     CardCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)
}



model userimages {
  id         Int      @id @default(autoincrement())
  user_id    Int
  image_url  String   @db.VarChar(512)
  created_at DateTime @default(now()) @db.Timestamp(0)
  users      users    @relation(fields: [user_id], references: [user_id], onDelete: Cascade, map: "userimage_ibfk_1")

  @@index([user_id], map: "user_id")
}

model users {
  user_id         Int              @id @default(autoincrement())
  name            String           @db.VarChar(100)
  email           String           @unique(map: "email") @db.VarChar(100)
  password        String           @db.VarChar(255)
  phone           String?          @db.VarChar(20)
  termsStatus     Boolean       @default(false)
  city            String?
  address         String?
  refreshToken    String? 
  created_at DateTime @default(now()) @db.DateTime(0)
  userimages       userimages[]
}

model AboutMe {
  id        Int     @id @default(autoincrement())
  paragraph String  @db.Text
}
model MissionVision {
  id        Int     @id @default(autoincrement())
  paragraph String  @db.Text
}
model PrivacyPolicy {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(255) // Optional: "Privacy Policy"
  content   String   @db.Text         // Long text with full policy
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model AboutApp {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(255) // Optional: "About the Game"
  content   String   @db.Text         // Long text description of the game
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model FAQ {
  id        Int      @id @default(autoincrement())
  question  String
  answer    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}